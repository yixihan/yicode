spring:

  # redis 配置
  redis:
    host: ${yicode.redis.host}
    port: ${yicode.redis.port}
    database: ${yicode.redis.database}
    password: ${yicode.redis.password}

  security:
    oauth2:
      resource-server:
        jwt:
          jwk-set-uri: 'http://localhost:11000/api/yicode-auth/rsa/publicKey'

  # 运行对 bean 进行重写
  main:
    allow-bean-definition-overriding: true
  cloud:
    gateway:
      #解决跨域问题
      globalcors:
        corsConfigurations:
          '[/**]':
            # 允许携带认证信息
            allow-credentials: true
            # 允许跨域的源(网站域名/ip)，设置*为全部
            allowedOrigins: "*"
            # 允许跨域的method， 默认为GET和OPTIONS，设置*为全部
            allowedMethods: "*"
            # 允许跨域请求里的head字段，设置*为全部
            allowedHeaders: "*"
      #解决双重跨域 RETAIN_FIRST RETAIN_LAST RETAIN_UNIQUE
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials Vary, RETAIN_UNIQUE


feign:
  client:
    yicode-user:
      name: yicode-user


management:
  endpoints:
    web:
      exposure:
        include: "*" # 开放所有端点 默认值只打开 health 和 info 两个端点
  endpoint:
    # health 端点配置项
    health:
      enabled: true
      show-details: always # 永远展示完整信息


