package com.yixihan.yicode.thirdpart.openapi;

import cn.hutool.json.JSONUtil;
import com.yixihan.yicode.common.exception.BizException;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.Test;

/**
 * description
 *
 * @author yixihan
 * @date 2023/3/17 11:06
 */
@Slf4j
class CustomTest {
    
    @Test
    void testParseJson() {
        String json = "{\"errorCode\":500,\"errorMsg\":\"测试异常\",\"stackTrace\":[\"com.yixihan.yicode.thirdpart.exception.GlobalExceptionHandler.handleBizException(GlobalExceptionHandler.java:35)\",\"sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\",\"sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\",\"sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\",\"java.lang.reflect.Method.invoke(Method.java:498)\",\"org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)\",\"org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)\",\"org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)\",\"org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:407)\",\"org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)\",\"org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)\",\"org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)\",\"org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)\",\"org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)\",\"org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)\",\"org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)\",\"org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)\",\"org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)\",\"javax.servlet.http.HttpServlet.service(HttpServlet.java:652)\",\"org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)\",\"javax.servlet.http.HttpServlet.service(HttpServlet.java:733)\",\"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)\",\"org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\",\"org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)\",\"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\",\"org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\",\"com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)\",\"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\",\"org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\",\"org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\",\"org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\",\"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\",\"org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\",\"org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\",\"org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\",\"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\",\"org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\",\"org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:97)\",\"org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\",\"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\",\"org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\",\"org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\",\"org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)\",\"org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)\",\"org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)\",\"org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)\",\"org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\",\"org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\",\"org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)\",\"org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\",\"org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\",\"org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\",\"org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)\",\"org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\",\"org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)\",\"org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1707)\",\"org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\",\"java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\",\"java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\",\"org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\",\"java.lang.Thread.run(Thread.java:748)\"]}";
    
        BizException e = JSONUtil.toBean (json, BizException.class);
        log.info ("errCode : {}, errMsg : {}", e.getErrorCode (), e.getErrorMsg ());
    }
}
